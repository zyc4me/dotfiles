settings set target.x86-disassembly-flavor intel
command alias reload_script command source ~/.lldbinit

# NOTE: 为了能够正常加载本文件， 尤其是下列 Python 脚本， 你需要带 Python 扩展的 LLDB
# Ubuntu 20.04 环境下, 基本上要自行编译(耗时30分钟或更短)
# 提供一个预编译版的 Clang+LLDB 安装包： 链接: https://pan.baidu.com/s/15DB7RlwUB-w7jxqU_2nVNg?pwd=hai4 提取码: hai4 复制这段内容后打开百度网盘手机App，操作更方便哦 

# 用整数类型显示 int8_t, uint8_t, 替代默认的十六进制
type format add -C no -f decimal int8_t
type format add -C no -f unsigned decimal uint8_t

# NEON 相关的数据类型打印
command script import ~/.lldbcfg/my_print.py

# Record Replay
command script import ~/.lldbcfg/my_rr.py

# cpython-lldb
# command script import cpython_lldb # failed on macOS, 可能是因为默认的 lldb 和 conda 的python 版本不一样
#command script import ~/work/github/cpython-lldb/cpython_lldb.py
#command script import ~/.lldb/cpython_lldb/cpython_lldb.py

#command script import ~/.lldbcfg/debugvis.py
#command script import ~/.lldbcfg/hello.py
#command script import ~/.lldbcfg/print_named_array.py
#command script import ~/.lldbcfg/print_my_array.py

# cvmat.py 有问题，表现为：用 VSCode 调试时, hello.py 里定义的命令 yay 无法执行
# 但奇怪的是，新开命令行的 lldb 则可以用 yay
#command script import ~/.lldbcfg/CvMatForLLDB/cvmat.py

#command script import ~/.my_config/home/.lldbcfg/OpenImageDebugger/oid.py


# >>> Error:
#p src.rows
#error: expression failed to parse:
#error: <user expression 0>:1:4: member access into incomplete type 'const cv::Mat'
#src.rows
#
# >>> Solution:
# include(sleek.cmake)
# sleek_add_flags("-fstandalone-debug")
