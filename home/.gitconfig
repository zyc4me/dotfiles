[user]
    email = imzhuo@foxmail.com
    name = Zhuo Zhang
    signingkey = 0961A0300B14A36D
[core]
    editor = vim
    #editor = subl -n w # sublime
    #editor = notepad++ -multiInst -nosession # notepad++
    #editor = 'C:\\Program Files (x86)\\Microsoft VS Code\\code.exe' -w  # vscode
    #editor = 'E:\\soft\\VSCode-Insider\\Code - Insiders.exe' -w  # vscode-insiders
    #editor = code-insiders -w # recommend VSCode with GitLens especially rebase -i moment
    #editor = code -w # recommend VSCode with GitLens especially rebase -i moment
    #https://stackoverflow.com/questions/14754762/can-gitconfig-options-be-set-conditionally
    #editor = "if [[ $IS_REMOTE -eq 1 ]]; then ED='vim'; else ED='subl -n -w'; fi; $ED"
    #editor = "$HOME/.my_edi_script.sh"
    #editor = "if [ $TERM_PROGRAM = \"vscode\" ]; then ED='code -w'; fi; $ED"
    #editor = "if [ $TERM_PROGRAM_VERSION = \"*insider\" ]; then ED='code-insider -w'; fi; $ED"

    # when execute git commit, use the current VSCode / VSCode Insiders editor
    # if current is not from VSCode / VSCode Insiders, then use vim
    # TODO: the VSCode insider determination is ugly. but the regular expression determination seems not working
    #editor = "if [[ $TERM_PROGRAM_VERSION == *-insider ]]; then ED='code-insiders -w'; elif [ $TERM_PROGRAM = vscode ]; then ED='code -w'; else ED='vim'; fi; $ED" # fail
    #editor = "if [ $TERM_PROGRAM_VERSION = 1.62.0-insider -o $TERM_PROGRAM_VERSION = 1.59.0-insider ]; then ED='code-insiders -w'; elif [ $TERM_PROGRAM = vscode ]; then ED='code -w'; else ED='vim'; fi; $ED"
    quotepath = false
    #autocrlf = input # linux/macosx
    #autocrlf = true # windows
[https]
    proxy = http://127.0.0.1:36219
[http]
    proxy = http://127.0.0.1:36219

# when do git difftool with vimdiff, exit with :cq
[difftool]
    trustExitCode = true
[mergetool]
    trustExitCode = true

[alias]
    co = checkout
    ci = commit
    st = status
    br = branch
    hist = log --pretty=tformat:'%Cgreen%h%Creset %ad | %s%d %C(bold blue)[%an]%Creset' --graph --date=short
    type = cat-file -t
    dump = cat-file -p
    tags = !"git for-each-ref \
        --sort=taggerdate \
        --format '%(tag)_,,,_%(taggerdate:raw)_,,,_%(taggername)_,,,_%(subject)' refs/tags \
        | awk 'BEGIN { FS = \"_,,,_\"  } ; { t=strftime(\"%Y-%m-%d  %H:%M\",$2); printf \"%-20s %-18s %-25s %s\\n\", t, $1, $4, $3  }'"
    forget = rm --cached

[commit]
    template = ~/.gitmessage
    gpgsign = true
[diff]
    tool = vimdiff
[credential]
    helper = store
[push]
    default = simple

# for git >= 2.19, we have to activate using builtin rebase/stash
# for fast speed. ref: https://github.com/git-for-windows/build-extra/pull/203#issuecomment-420927710
#[rebase]
#    useBuiltin = true
#[stash]
#    useBuiltin = true

# since Git 2.27, we have to set git pull's default strategy ourselves
# this helps people don't create merge commits, or let them know they are creating merge commits
# ref: https://stackoverflow.com/a/62653694/2999096
[pull]
    rebase = true
[status]
    submodulesummary = 1

# for git >= 2.30, when we do `git init`
# we can config the default name of the created branch
# otherwise it will show error message
[init]
    defaultBranch = master

# for interactive rebasing
# https://stackoverflow.com/questions/18571741/multiple-git-editors
# [sequence]
#   editor = code -w
[gpg]
	program = gpg2
